# -*- coding: utf-8 -*-
"""周易六爻占卜程序 (大衍筮法 + 卦爻辞)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TPq6dnt28N4VAR9wvz1e6woXAkhDzWfx
"""

import random
import json # 导入json模块用于处理JSON文件

# 全局变量，用于存储从JSON文件加载的卦爻辞数据
HEXAGRAM_TEXTS_DATA = {}

# 六十四卦基本数据 (卦名、Unicode等)
HEXAGRAM_DATA = {
    "111111": {"id": 1, "char": "䷀", "name_cn": "乾", "pinyin": "Qián"},
    "000000": {"id": 2, "char": "䷁", "name_cn": "坤", "pinyin": "Kūn"},
    "100010": {"id": 3, "char": "䷂", "name_cn": "屯", "pinyin": "Zhūn"},
    "010001": {"id": 4, "char": "䷃", "name_cn": "蒙", "pinyin": "Méng"},
    "010111": {"id": 5, "char": "䷄", "name_cn": "需", "pinyin": "Xū"},
    "111010": {"id": 6, "char": "䷅", "name_cn": "訟", "pinyin": "Sòng"},
    "000010": {"id": 7, "char": "䷆", "name_cn": "師", "pinyin": "Shī"},
    "010000": {"id": 8, "char": "䷇", "name_cn": "比", "pinyin": "Bǐ"},
    "110111": {"id": 9, "char": "䷈", "name_cn": "小畜", "pinyin": "Xiǎo Xù"},
    "111011": {"id": 10, "char": "䷉", "name_cn": "履", "pinyin": "Lǚ"},
    "000111": {"id": 11, "char": "䷊", "name_cn": "泰", "pinyin": "Tài"},
    "111000": {"id": 12, "char": "䷋", "name_cn": "否", "pinyin": "Pǐ"},
    "111101": {"id": 13, "char": "䷌", "name_cn": "同人", "pinyin": "Tóng Rén"},
    "101111": {"id": 14, "char": "䷍", "name_cn": "大有", "pinyin": "Dà Yǒu"},
    "000001": {"id": 15, "char": "䷎", "name_cn": "謙", "pinyin": "Qiān"},
    "100000": {"id": 16, "char": "䷏", "name_cn": "豫", "pinyin": "Yù"},
    "011100": {"id": 17, "char": "䷐", "name_cn": "隨", "pinyin": "Suí"},
    "001110": {"id": 18, "char": "䷑", "name_cn": "蠱", "pinyin": "Gǔ"},
    "000011": {"id": 19, "char": "䷒", "name_cn": "臨", "pinyin": "Lín"},
    "110000": {"id": 20, "char": "䷓", "name_cn": "觀", "pinyin": "Guān"},
    "101100": {"id": 21, "char": "䷔", "name_cn": "噬嗑", "pinyin": "Shì Kè"},
    "001101": {"id": 22, "char": "䷕", "name_cn": "賁", "pinyin": "Bì"},
    "001000": {"id": 23, "char": "䷖", "name_cn": "剝", "pinyin": "Bō"},
    "000100": {"id": 24, "char": "䷗", "name_cn": "復", "pinyin": "Fù"},
    "111100": {"id": 25, "char": "䷘", "name_cn": "無妄", "pinyin": "Wú Wàng"},
    "001111": {"id": 26, "char": "䷙", "name_cn": "大畜", "pinyin": "Dà Xù"},
    "100001": {"id": 27, "char": "䷚", "name_cn": "頤", "pinyin": "Yí"},
    "011110": {"id": 28, "char": "䷛", "name_cn": "大過", "pinyin": "Dà Guò"},
    "010010": {"id": 29, "char": "䷜", "name_cn": "坎", "pinyin": "Kǎn"},
    "101101": {"id": 30, "char": "䷝", "name_cn": "離", "pinyin": "Lí"},
    "011001": {"id": 31, "char": "䷞", "name_cn": "咸", "pinyin": "Xián"},
    "100110": {"id": 32, "char": "䷟", "name_cn": "恆", "pinyin": "Héng"},
    "111001": {"id": 33, "char": "䷠", "name_cn": "遯", "pinyin": "Dùn"},
    "100111": {"id": 34, "char": "䷡", "name_cn": "大壯", "pinyin": "Dà Zhuàng"},
    "101000": {"id": 35, "char": "䷢", "name_cn": "晉", "pinyin": "Jìn"},
    "000101": {"id": 36, "char": "䷣", "name_cn": "明夷", "pinyin": "Míng Yí"},
    "110101": {"id": 37, "char": "䷤", "name_cn": "家人", "pinyin": "Jiā Rén"},
    "101011": {"id": 38, "char": "䷥", "name_cn": "睽", "pinyin": "Kuí"},
    "001010": {"id": 39, "char": "䷦", "name_cn": "蹇", "pinyin": "Jiǎn"},
    "010100": {"id": 40, "char": "䷧", "name_cn": "解", "pinyin": "Xiè"},
    "001011": {"id": 41, "char": "䷨", "name_cn": "損", "pinyin": "Sǔn"},
    "110100": {"id": 42, "char": "䷩", "name_cn": "益", "pinyin": "Yì"},
    "011111": {"id": 43, "char": "䷪", "name_cn": "夬", "pinyin": "Guài"},
    "111110": {"id": 44, "char": "䷫", "name_cn": "姤", "pinyin": "Gòu"},
    "011000": {"id": 45, "char": "䷬", "name_cn": "萃", "pinyin": "Cuì"},
    "000110": {"id": 46, "char": "䷭", "name_cn": "升", "pinyin": "Shēng"},
    "011010": {"id": 47, "char": "䷮", "name_cn": "困", "pinyin": "Kùn"},
    "010110": {"id": 48, "char": "䷯", "name_cn": "井", "pinyin": "Jǐng"},
    "011101": {"id": 49, "char": "䷰", "name_cn": "革", "pinyin": "Gé"},
    "101110": {"id": 50, "char": "䷱", "name_cn": "鼎", "pinyin": "Dǐng"},
    "100100": {"id": 51, "char": "䷲", "name_cn": "震", "pinyin": "Zhèn"},
    "001001": {"id": 52, "char": "䷳", "name_cn": "艮", "pinyin": "Gèn"},
    "110001": {"id": 53, "char": "䷴", "name_cn": "漸", "pinyin": "Jiàn"},
    "100011": {"id": 54, "char": "䷵", "name_cn": "歸妹", "pinyin": "Guī Mèi"},
    "100101": {"id": 55, "char": "䷶", "name_cn": "豐", "pinyin": "Fēng"},
    "101001": {"id": 56, "char": "䷷", "name_cn": "旅", "pinyin": "Lǚ"},
    "110110": {"id": 57, "char": "䷸", "name_cn": "巽", "pinyin": "Xùn"},
    "011011": {"id": 58, "char": "䷹", "name_cn": "兌", "pinyin": "Duì"},
    "110010": {"id": 59, "char": "䷺", "name_cn": "渙", "pinyin": "Huàn"},
    "010011": {"id": 60, "char": "䷻", "name_cn": "節", "pinyin": "Jié"},
    "110011": {"id": 61, "char": "䷼", "name_cn": "中孚", "pinyin": "Zhōng Fú"},
    "001100": {"id": 62, "char": "䷽", "name_cn": "小過", "pinyin": "Xiǎo Guò"},
    "010101": {"id": 63, "char": "䷾", "name_cn": "既濟", "pinyin": "Jì Jì"},
    "101010": {"id": 64, "char": "䷿", "name_cn": "未濟", "pinyin": "Wèi Jì"},
}

def load_hexagram_texts(filename="gua_yao_ci.json"):
    """从JSON文件加载卦爻辞数据"""
    global HEXAGRAM_TEXTS_DATA
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            HEXAGRAM_TEXTS_DATA = json.load(f)
        print(f"成功加载卦爻辞数据从 {filename}")
    except FileNotFoundError:
        print(f"警告: 卦爻辞文件 {filename} 未找到。将无法显示卦爻辞。")
        HEXAGRAM_TEXTS_DATA = {}
    except json.JSONDecodeError:
        print(f"警告: 卦爻辞文件 {filename} 格式错误。将无法显示卦爻辞。")
        HEXAGRAM_TEXTS_DATA = {}
    except Exception as e:
        print(f"警告: 加载卦爻辞文件 {filename} 时发生未知错误: {e}。将无法显示卦爻辞。")
        HEXAGRAM_TEXTS_DATA = {}


def yarrow_stalk_cast():
    """
    使用大衍筮法确定一爻。
    返回值为 6 (老阴), 7 (少阳), 8 (少阴), 或 9 (老阳)。
    """
    stalks_total = 49
    current_stalks = stalks_total

    # --- 第一次变化 ---
    if current_stalks <= 1: raise ValueError(f"蓍草数量不足以进行分堆：{current_stalks}")
    left_pile = random.randint(1, current_stalks - 1)
    right_pile = current_stalks - left_pile
    gua_yi = 1
    right_pile -= gua_yi
    remainder_left = left_pile % 4 or 4
    remainder_right = right_pile % 4 or 4
    stalks_set_aside_1 = gua_yi + remainder_left + remainder_right
    current_stalks -= stalks_set_aside_1

    # --- 第二次变化 ---
    if current_stalks <= 1: raise ValueError(f"蓍草数量不足以进行分堆：{current_stalks}")
    left_pile = random.randint(1, current_stalks - 1)
    right_pile = current_stalks - left_pile
    gua_yi = 1
    right_pile -= gua_yi
    remainder_left = left_pile % 4 or 4
    remainder_right = right_pile % 4 or 4
    stalks_set_aside_2 = gua_yi + remainder_left + remainder_right
    current_stalks -= stalks_set_aside_2

    # --- 第三次变化 ---
    if current_stalks <= 1: raise ValueError(f"蓍草数量不足以进行分堆：{current_stalks}")
    left_pile = random.randint(1, current_stalks - 1)
    right_pile = current_stalks - left_pile
    gua_yi = 1
    right_pile -= gua_yi
    remainder_left = left_pile % 4 or 4
    remainder_right = right_pile % 4 or 4
    stalks_set_aside_3 = gua_yi + remainder_left + remainder_right

    stalks_for_line_calc = current_stalks - stalks_set_aside_3
    line_code = stalks_for_line_calc // 4

    if line_code == 9: return 9 # 老阳
    elif line_code == 8: return 8 # 少阴
    elif line_code == 7: return 7 # 少阳
    elif line_code == 6: return 6 # 老阴
    else: raise Exception(f"蓍草卜卦计算错误，最终策数无法确定爻象: {stalks_for_line_calc}")


def get_line_properties(value):
    """根据爻值 (6, 7, 8, 9) 返回爻的属性。"""
    if value == 6:
        return {"name": "老阴", "symbol": "---X---", "is_changing": True, "primary_type": 0, "secondary_type": 1}
    elif value == 7:
        return {"name": "少阳", "symbol": "-------", "is_changing": False, "primary_type": 1, "secondary_type": 1}
    elif value == 8:
        return {"name": "少阴", "symbol": "--- ---", "is_changing": False, "primary_type": 0, "secondary_type": 0}
    elif value == 9:
        return {"name": "老阳", "symbol": "---●---", "is_changing": True, "primary_type": 1, "secondary_type": 0}
    else:
        raise ValueError(f"无效的爻值: {value}")

def perform_divination():
    """执行周易六爻占卜过程。"""
    if len(HEXAGRAM_DATA) != 64 or len(set(HEXAGRAM_DATA.keys())) != 64:
        print("严重错误: HEXAGRAM_DATA 数据不完整或包含重复的二进制密钥。程序无法继续。")
        return

    print("周易六爻占卜程序 (大衍筮法 + 卦爻辞)")
    print("=" * 30)

    divination_subject = input("请输入您想占卜的事项：")
    # divination_subject = "未指定事项"
    if not divination_subject:
        divination_subject = "未指定事项"
    
    print(f"\n占卜事项：{divination_subject}")
    print("=" * 30)
    print("正在卜卦 (使用大衍筮法)...")

    cast_lines_values = []
    for i in range(6):
        # print(f"正在推演第 {i+1} 爻...") # 可以取消注释以显示每爻推演过程
        cast_lines_values.append(yarrow_stalk_cast())

    print("\n--- 各爻情况 (由下往上) ---")
    lines_details = []
    for i, value in enumerate(cast_lines_values):
        props = get_line_properties(value)
        lines_details.append(props)
        change_text = " (变爻)" if props["is_changing"] else ""
        print(f"第 {i+1} 爻: {value} ({props['name']}{change_text}) - {props['symbol']}")

    primary_binary_key = "".join(str(ld["primary_type"]) for ld in lines_details)
    primary_hex_info = HEXAGRAM_DATA.get(primary_binary_key)
    primary_hex_texts = HEXAGRAM_TEXTS_DATA.get(primary_binary_key) if HEXAGRAM_TEXTS_DATA else None


    if not primary_hex_info:
        print(f"\n错误：未能找到本卦信息。内部二进制码: {primary_binary_key}")
        return

    print(f"\n--- 本卦 (Primary Hexagram) ---")
    print(f"卦 {primary_hex_info['id']}: {primary_hex_info['char']} {primary_hex_info['name_cn']} ({primary_hex_info['pinyin']})")

    if primary_hex_texts and 'gua_ci' in primary_hex_texts:
        print(f"【卦辞】：{primary_hex_texts['gua_ci']}")
    else:
        print("【卦辞】：（无可用卦辞）")

    print("\n卦象 (上爻为顶，初爻为底) 及爻辞:")
    for i in range(5, -1, -1): # 从上爻（第6爻，索引5）往下显示
        line_num_display = i + 1 # 爻的显示序号 (1-6)
        print(f"爻 {line_num_display}: {lines_details[i]['symbol']}")
        if primary_hex_texts and 'yao_ci' in primary_hex_texts and len(primary_hex_texts['yao_ci']) > i :
             # 爻辞在JSON中是列表，索引从0开始对应初爻
            print(f"    {primary_hex_texts['yao_ci'][i]}")
        else:
            print(f"    （无可用爻辞）")


    changing_lines_indices = [i for i, ld in enumerate(lines_details) if ld["is_changing"]]

    if not changing_lines_indices:
        print("\n此卦没有变爻。")
    else:
        print("\n--- 变爻提示 ---")
        is_all_nine = primary_binary_key == "111111" and all(val == 9 for val in cast_lines_values)
        is_all_six = primary_binary_key == "000000" and all(val == 6 for val in cast_lines_values)

        if is_all_nine and primary_hex_texts and 'yong_jiu' in primary_hex_texts:
            print(f"六爻皆变为九，参考【用九】：{primary_hex_texts['yong_jiu']}")
        elif is_all_six and primary_hex_texts and 'yong_liu' in primary_hex_texts:
            print(f"六爻皆变为六，参考【用六】：{primary_hex_texts['yong_liu']}")
        else:
            for i in changing_lines_indices:
                line_num_display = i + 1
                print(f"第 {line_num_display} 爻 ({lines_details[i]['name']}) 为变爻。")
                if primary_hex_texts and 'yao_ci' in primary_hex_texts and len(primary_hex_texts['yao_ci']) > i:
                    print(f"    变爻爻辞参考：{primary_hex_texts['yao_ci'][i]}")
                else:
                    print(f"    （无可用爻辞）")


        secondary_binary_key = "".join(str(ld["secondary_type"]) for ld in lines_details)
        secondary_hex_info = HEXAGRAM_DATA.get(secondary_binary_key)
        secondary_hex_texts = HEXAGRAM_TEXTS_DATA.get(secondary_binary_key) if HEXAGRAM_TEXTS_DATA else None

        if not secondary_hex_info:
            print(f"\n错误：未能找到变卦信息。内部二进制码: {secondary_binary_key}")
            return

        print(f"\n--- 变卦 (Changed Hexagram) ---")
        print(f"卦 {secondary_hex_info['id']}: {secondary_hex_info['char']} {secondary_hex_info['name_cn']} ({secondary_hex_info['pinyin']})")
        if secondary_hex_texts and 'gua_ci' in secondary_hex_texts:
            print(f"【卦辞】：{secondary_hex_texts['gua_ci']}")
        else:
            print("【卦辞】：（无可用卦辞）")

        print("卦象 (上爻为顶，初爻为底):")
        for i in range(5, -1, -1):
            if lines_details[i]["secondary_type"] == 1:
                stable_symbol = "-------"
            else:
                stable_symbol = "--- ---"
            print(f"爻 {i+1}: {stable_symbol}")


    print("\n" + "=" * 30)
    print("占卜完成。请参照《周易》或其他相关典籍解读卦辞与爻辞。")

if __name__ == "__main__":
    load_hexagram_texts() # 程序启动时加载卦爻辞数据
    perform_divination()